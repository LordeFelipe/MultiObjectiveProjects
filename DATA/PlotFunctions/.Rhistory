teste <- runif(n = 148, min = 0.3, max = 2.5)
teste
discrete[1,which.min(abs(as.matrix(discrete[1,]) - teste))]
length()
length(discrete)
length(as.matrix(discrete))
18*148
min(na,)
min(abs(as.matrix(discrete[1,]) - 1.25))
min(abs(as.matrix(discrete[1,]) - 1.25), na.rm = FALSE)
min(abs(as.matrix(discrete[1,]) - 1.25), na.rm = TRUE)
min(abs(as.matrix(discrete[1:2,]) - 1.25), na.rm = TRUE)
apply(abs(as.matrix(discrete[1,]) - 1.2), 1,na.rm = TRUE FUN=min)
apply(abs(as.matrix(discrete[1,]) - 1.2), 1,na.rm = TRUE, FUN=min)
apply(abs(as.matrix(discrete[1:2,]) - 1.2), 1,na.rm = TRUE, FUN=min)
apply(abs(as.matrix(discrete) - 1.2), 1,na.rm = TRUE, FUN=min)
as.matrix(discrete)
as.matrix(discrete) - teste
teste
as.matrix(discrete) - teste
abs(as.matrix(discrete) - teste)
apply(abs(as.matrix(discrete) - teste)), 1,na.rm = TRUE, FUN=min)
apply(abs(as.matrix(discrete) - teste)), 1,na.rm = TRUE, FUN=min)
abs(as.matrix(discrete) - teste)
apply(abs(as.matrix(discrete) - teste)), 1,na.rm = TRUE, FUN=min)
apply(abs(as.matrix(discrete) - teste), 1,na.rm = TRUE, FUN=min)
apply(abs(as.matrix(discrete[1,]) - 1.2), 1, FUN=min)
apply(abs(as.matrix(discrete) - teste), 1,na.rm = TRUE, FUN=min)
apply(abs(as.matrix(discrete) - teste), 1,na.rm = TRUE, FUN=min) + teste
apply(abs(as.matrix(discrete) - X), 1,na.rm = TRUE, FUN=which.min)
apply(abs(as.matrix(discrete) - teste), 1,na.rm = TRUE, FUN=which.min)
apply(abs(as.matrix(discrete) - teste), 1, FUN=which.min)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Discrete.R', echo=TRUE)
nearest = apply(abs(as.matrix(discrete) - teste), 1, FUN=which.min)
nearest
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Discrete.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Discrete.R', echo=TRUE)
discrete[i]
for (i in nearest) {
discrete[i]
}
for (i in nearest) {
discrete[i]
}
nearest = apply(abs(as.matrix(discrete) - teste), 1, FUN=which.min)
for (i in nearest) {
discrete[i]
}
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Discrete.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Discrete.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Discrete.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Discrete.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Discrete.R', echo=TRUE)
discreteValues
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
X
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
force(X)
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
discrete
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
force(X)
X
teste <- matrix(runif(n = 148*50, min = 0.3, max = 2.5), nrow = 148)
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
force(X)
teste <- matrix(runif(n = 148*50, min = 0.3, max = 2.5), ncol = 148)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Discrete.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Discrete.R', echo=TRUE)
discretize(teste)
teste[1,]
discretize(teste[1,])
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Discrete.R', echo=TRUE)
discretize(teste[1,])
discretize(teste[1,])
a = discretize(teste[1,])
a
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Discrete.R', echo=TRUE)
a = discretize(teste[1,])
a
a = apply(teste, FUN = discretize,1)
a
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
a = apply(teste, FUN = discretize,1)]
results$X
results$Y
BORA = apply(results$X,1, FUN = Discretize)
BORA
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
BORA = apply(results$X,1, FUN = Discretize)
BORA
BORA = apply(results$Y,1, FUN = Discretize)
results$Y
results$Y[1,]
results$Y[,1]
results$Y[,2]
plot(results$Y[,1], results$Y[,2])
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
plot(results$Y[,1], results$Y[,2])
preset_moead()
source('~/Documents/Unb/6S/EstudosEm/Projects/Cone/MinimizeCone.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/Cone/MinimizeCone.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/Cone/MinimizeCone.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/Cone/MinimizeCone.R', echo=TRUE)
preset_moead()
source('~/Documents/Unb/6S/EstudosEm/Projects/Cone/MinimizeCone.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
library(MOEADr)
preset_moead()
shell(a)
preset_moead()system(paste("source", paste(getwd(), "jpnsecCompetition2019/bin/activate", sep = "/"), sep = " "))
system(paste("source", paste(getwd(), "jpnsecCompetition2019/bin/activate", sep = "/"), sep = " "))
system(paste("source", paste(getwd(), "jpnsecCompetition2019/bin/activate", sep = "/"), sep = " "), intern = TRUE)
system(paste("source", paste(getwd(), "jpnsecCompetition2019/bin/activate", sep = "/"), sep = " "), intern = FALSE)
help("system")
help("shell")
help("shell")
help("system")
help("shell")
help("system")
as.list(environment())
a = as.list(environment())
call.env()
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/MAZDACarProblem1/MazdaCar3.R', echo=TRUE)
setwd("~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/MAZDACarProblem1")
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/MAZDACarProblem1/MazdaCar3.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/DATA/PlotFunctions/Plot_all_solutions.R', echo=TRUE)
library(MOEADr)
library(emoa)
library(ggplot2)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Path to the desired problem
# ../MAZDA/         -> MAZDA Car Problem
# ../MOON/          -> Moon Landing Problem
# ../CRE/CRE21/     -> Problem suite Problem (To acess others change the number)
path = "../MAZDA/"
# Name of the tests
#filename = c("200g_dynamic_alpha2_C005/","200g_dynamic_alpha2_C002/", "200g_static100/", "200g_static1/","200g_selfadapting/","200g_none/")
filename = c("200g_selfadapting/")
n_cases = length(filename)
# Options for the plotted solutions
only_feasible = TRUE
only_non_dominated = FALSE
# Parameters for execution
n_objectives = 2
n_individuals = 300
n_iterations = 200
n_runs = 10
# Initializing the solutions matrix
allSolutions = matrix(ncol =  n_objectives+1, nrow = 0)
for(j in 1:n_cases){
for(i in 1:n_runs){
# Reading the data
newSolutions = scan(paste0(path,filename[j],"MyArchive",i,".txt"), quiet = TRUE)
newSolutions = matrix(newSolutions,nrow = n_individuals*n_iterations, ncol = n_objectives+1, byrow = TRUE)
# Concatenating the new solutions with all solutions
allSolutions = rbind(allSolutions, newSolutions)
# Filtering all repeated solutions
allSolutions = unique(allSolutions)
}
}
# Applying filters to the solutions if necessary
if (only_feasible){
allSolutions = allSolutions[which(allSolutions[,3] == 1)]
}
allSolutions
allSolutions[,3]
# Applying filters to the solutions if necessary
if (only_feasible){
allSolutions = allSolutions[which(allSolutions[,3] == 1),]
}
# Applying filters to the solutions if necessary
if (only_feasible){
allSolutions = allSolutions[which(allSolutions[,3] == 1),]
}
# Initializing the solutions matrix
allSolutions = matrix(ncol =  n_objectives+1, nrow = 0)
for(j in 1:n_cases){
for(i in 1:n_runs){
# Reading the data
newSolutions = scan(paste0(path,filename[j],"MyArchive",i,".txt"), quiet = TRUE)
newSolutions = matrix(newSolutions,nrow = n_individuals*n_iterations, ncol = n_objectives+1, byrow = TRUE)
# Concatenating the new solutions with all solutions
allSolutions = rbind(allSolutions, newSolutions)
# Filtering all repeated solutions
allSolutions = unique(allSolutions)
}
}
# Applying filters to the solutions if necessary
if (only_feasible){
allSolutions = allSolutions[which(allSolutions[,3] == 1),]
}
allSolutions[,3]
# Creating the labels for feasible and unfeasible
labels = allSolutions[,3]
labels = ifelse(labels,"Feasible","Unfeasible")
# Creating the data frame
data = data.frame(Objective1 = allSolutions[,1], Objective2 = allSolutions[,2], Labels = labels)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA - Selfadaptive") +
geom_point(aes(colour = Labels)) +
xlim(-70, 0) +
ylim(2,3.8)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/DATA/PlotFunctions/Plot_all_solutions.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/DATA/PlotFunctions/Plot_all_solutions.R', echo=TRUE)
nondominated_points(t(allSolutions[,1:2]))
nondominated_points()
nondominated_points(allSolutions[,1:2])
nondominated_points(t(allSolutions[,1:2]))
help("nondominated_points")
emoa
help("nondominated_order")
help(nondominated_ordering)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/DATA/PlotFunctions/Plot_all_solutions.R', echo=TRUE)
allSolutions
plot(allSolutions)
plot(allSolutions[1,], allSolutions[2,])
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/DATA/PlotFunctions/Plot_all_solutions.R', echo=TRUE)
allSolutions
plot(allSolutions[1,], allSolutions[2,])
if(only_non_dominated){
allSolutions = nondominated_points(t(allSolutions[,1:3]))
}
# Creating the labels for feasible and unfeasible
labels = allSolutions[,3]
allSolutions
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/DATA/PlotFunctions/Plot_all_solutions.R', echo=TRUE)
allSolutions
labels
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/DATA/PlotFunctions/Plot_all_solutions.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/DATA/PlotFunctions/Plot_all_solutions.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/DATA/PlotFunctions/Plot_all_solutions.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/DATA/PlotFunctions/Plot_all_solutions.R', echo=TRUE)
allSolutions
data
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA - Selfadaptive") +
geom_point(aes(colour = Labels)) +
xlim(-70, 0) +
ylim(2,3.8)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels))
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA - Selfadaptive") +
geom_point(aes(colour = Labels))
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/DATA/PlotFunctions/Plot_all_solutions.R', echo=TRUE)
allSolutions
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/DATA/PlotFunctions/Plot_all_solutions.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/DATA/PlotFunctions/Plot_all_solutions.R', echo=TRUE)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
geom_point(aes(alpha = 0.5, colour = Labels)) +
xlim(-80, 0) +
ylim(2,3.8)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
geom_point(alpha = 0.5, aes(colour = Labels)) +
xlim(-80, 0) +
ylim(2,3.8)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
geom_point(aes(colour = Labels, alpha = Labels)) +
xlim(-80, 0) +
ylim(2,3.8)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
geom_point(aes(colour = Labels)) +
xlim(-80, 0) +
ylim(2,3.8)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
geom_density_2d(aes(colour = Labels)) +
#geom_point(aes(colour = Labels)) +
xlim(-80, 0) +
ylim(2,3.8)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
geom_density_2d(aes(colour = Labels, fill = ..level..)) +
#geom_point(aes(colour = Labels)) +
xlim(-80, 0) +
ylim(2,3.8)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
stat_density_2d(aes(colour = Labels, fill = ..level..)) +
#geom_point(aes(colour = Labels)) +
xlim(-80, 0) +
ylim(2,3.8)
..level..
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
stat_density_2d(aes(colour = Labels)) +
#geom_point(aes(colour = Labels)) +
xlim(-80, 0) +
ylim(2,3.8)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
stat_density_2d(aes(colour = Labels), geom="polygon") +
#geom_point(aes(colour = Labels)) +
xlim(-80, 0) +
ylim(2,3.8)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
stat_density_2d(aes(colour = Labels), geom="polygon") +
scale_fill_gradient(low="blue", high="red") +
#geom_point(aes(colour = Labels)) +
xlim(-80, 0) +
ylim(2,3.8)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
stat_density_2d(aes(colour = Labels), geom="polygon") +
scale_fill_gradient(low="blue", high="red")
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
stat_density_2d(aes(colour = Labels), geom="polygon") +
scale_fill_gradient()
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
stat_density_2d(aes(colour = Labels), geom="polygon")
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
stat_density_2d(aes(colour = Labels), geom="polygon", alpha = 0.5)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/DATA/PlotFunctions/Plot_all_solutions.R', echo=TRUE)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
stat_density_2d(aes(colour = Labels), geom="polygon", alpha = 0.5)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
stat_density_2d(aes(colour = Labels), geom="polygon", alpha = 0.4)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
stat_density_2d(aes(colour = Labels), geom="polygon", alpha = 0.3)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
geom_density_2d(aes(colour = Labels), geom="polygon", alpha = 0.3)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
geom_density_2d(aes(colour = Labels), geom="polygon")
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
geom_density_2d(aes(colour = Labels), geom="polygon") +
scale_fill_gradient()
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
geom_density_2d(aes(colour = Labels), geom="polygon") +
geom_point(aes(colour = Labels)) +
xlim(-80, 0) +
ylim(2,3.8)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
geom_density_2d(aes(colour = Labels), geom="polygon") +
geom_point(aes(colour = Labels), alpha = 0.1) +
xlim(-80, 0) +
ylim(2,3.8)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
stat_ellipse() +
geom_point(aes(colour = Labels), alpha = 0.1) +
xlim(-80, 0) +
ylim(2,3.8)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
stat_ellipse() +
geom_point(aes(colour = Labels)) +
xlim(-80, 0) +
ylim(2,3.8)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
geom_jitter(aes(colour = Labels)) +
geom_point(aes(colour = Labels)) +
xlim(-80, 0) +
ylim(2,3.8)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
geom_jitter(aes(colour = Labels)) +
xlim(-80, 0) +
ylim(2,3.8)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
geom_jitter(aes(colour = Labels, alpha = Labels)) +
xlim(-80, 0) +
ylim(2,3.8)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
geom_jitter(aes(colour = Labels, alpha = c(0.1,0.5))) +
xlim(-80, 0) +
ylim(2,3.8)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/DATA/PlotFunctions/Plot_all_solutions.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/DATA/PlotFunctions/Plot_all_solutions.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/DATA/PlotFunctions/Plot_all_solutions.R', echo=TRUE)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
geom_jitter(aes(colour = Labels)) +
xlim(-80, 0) +
ylim(2,3.8)
allSolutions
allSolutions[,2]
min(allSolutions[,2])
max(allSolutions[,2])
max(allSolutions[,1])
min(allSolutions[,1])
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/DATA/PlotFunctions/Plot_all_solutions.R', echo=TRUE)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
geom_point(aes(colour = Labels, alpha = opacity)) +
xlim(-80, 0) +
ylim(2,3.8)
allSolutions[,2]
allSolutions[,2]
allSolutions[,1]
min(allSolutions[,1])
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/DATA/PlotFunctions/Plot_all_solutions.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/DATA/PlotFunctions/Plot_all_solutions.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/DATA/PlotFunctions/Plot_all_solutions.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/DATA/PlotFunctions/Plot_all_solutions.R', echo=TRUE)
library(gganimate)
install.packages("gganimate")
library(gganimate)
install.packages("gifski")
library(gganimate)
help("transition_states")
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
geom_point(aes(colour = Labels)) +
transition_states(Species,
transition_length = 200,
state_length = 1) +
xlim(xlim) +
ylim(ylim)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
geom_point(aes(colour = Labels)) +
transition_states(data,
transition_length = 200,
state_length = 1) +
xlim(xlim) +
ylim(ylim)
# Ploting
ggplot(data, aes(x=Objective1, y = Objective2, fill=Labels)) +
labs(title = "MAZDA") +
geom_point(aes(colour = Labels)) +
transition_states(
transition_length = 200,
state_length = 1) +
xlim(xlim) +
ylim(ylim)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/DATA/PlotFunctions/Plot_all_solutions.R', echo=TRUE)
p
p + transition_states(,
transition_length = 200,
state_length = 1)
p + transition_states(Labels,
transition_length = 200,
state_length = 1)
rep(1,20)
rep(1:5,20)
rep(1,20)
rep(1,200)
rep(1:2,200)
rep(1:2,each = 200)
rep(1:200,each = 200)
# Creating the data frame
data = data.frame(Objective1 = allSolutions[,1], Objective2 = allSolutions[,2], Labels = labels)
# Creating the data frame
generation = rep(1:n_iterations,each = n_individuals)
data = data.frame(Objective1 = allSolutions[,1], Objective2 = allSolutions[,2], Labels = labels, Generation = generation)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/DATA/PlotFunctions/Plot_all_solutions.R', echo=TRUE)
