#Reading the possible discrete values
discrete = read.table("~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/DiscreteValues.txt",col.names = paste0("V",seq_len(18)), sep = ",",fill = TRUE)
#Objecive Function for the total weight
EvaluateWeight <- function(X){
write(round(X, digits = 1),file = "~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Evaluate/pop_vars_eval.txt", ncolumns = 148, sep = "\t")
system("~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/mazda_mop_sca ~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Evaluate/")
objectives <- scan('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Evaluate/pop_objs_eval.txt')
objectives <- matrix(objectives, ncol = 4, byrow = TRUE)
weight = matrix(objectives[,1], ncol = 1)
weight
}
#Objective Function for the number of commom parts
EvaluateCommonParts <- function(X){
write(round(X, digits = 1),file = "~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Evaluate/pop_vars_eval.txt", ncolumns = 148, sep = "\t")
system("~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/mazda_mop_sca ~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Evaluate/")
objectives <- scan('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Evaluate/pop_objs_eval.txt')
objectives <- matrix(objectives, ncol = 4, byrow = TRUE)
common = matrix(objectives[,2], ncol = 1)
common
}
#Definition of the problem
problem.car <- function(X) {
t(apply(X, MARGIN = 1,
FUN = function(X) { c(EvaluateCommonParts(X), EvaluateWeight(X)) }
))
}
problem.1 <- list(name       = "problem.car",  # Function that executes the MOP
xmin       = rep(0.3,148),    # minimum parameter value for each dimension
xmax       = rep(3,148),     # maximum parameter value for each dimension
constraints = list(name = "my_constraints"),
m          = 2)              # Number of objectives
## 1 - Decomposition
decomp <- list(name = "SLD",H = 49) #Population of 50 solutions
## 2 - Neighbors
neighbors <- list(name    = "lambda",
T       = 2, #Size of the neighborhood
delta.p = 0.9) #Probability of using the neighborhood
## 3 - Aggregation function
aggfun <- list(name = "wt")
## 4 - Update strategy
update <- list(name = "standard")
## 5 - Scaling
scaling <- list(name = "simple")
## 6 - Stop criterion
stopcrit  <- list(list(name  = "maxiter",
maxiter  = 50))
## 7 - Variation Operators
variation <- list(list(name  = "sbx",
etax  = 20, pc = 0.7),
list(name  = "polymut",
etam  = 20, pm = 0.3),
list(name  = "truncate"))
## 8 - Show
showpars  <- list(show.iters = "dots",
showevery  = 10)
## 9 - Constraint
my_constraints <- function(X)
{
X = round(X, digits = 1)
nv <- 148 # number of variables
# Prepare output matrix of constraint function values
Cmatrix <- matrix(numeric(),
nrow = nrow(X),
ncol = 2 * nv + 36) # 296 box constraints and 36 inequality constraints
# Set informative column names (be nice to your users!)
colnames(Cmatrix) <- c(paste0("x",
rep(1:nv, times = 2),
rep(c("min","max"), each = nv)),
rep(c("g1"), each = 36))
# Box limits of the feasible space
Xmin <- matrix(0.3, byrow = TRUE, ncol = 148, nrow = nrow(X))
Xmax <- matrix(3, byrow = TRUE, ncol = 148, nrow = nrow(X))
# Calculate "x_i >= 0" and "x_i <= 1" constraints
Cmatrix[, 1:nv]              <- Xmin - X
Cmatrix[, (nv + 1):(2 * nv)] <- X - Xmax
# g1 and h1 functions
g1 <- function(X){
write(X,file = "~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Evaluate/pop_vars_eval.txt", ncolumns = 148, sep = "\t")
system("~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/mazda_mop_sca ~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Evaluate/")
constraints <- scan('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCarre/Evaluate/pop_cons_eval.txt')
constraints <- matrix(constraints, ncol = 36, byrow = TRUE)
return(constraints)
}
# Calculate g1(x)
Cmatrix[, (2*nv + 1):(2*nv + 36)] <- g1(X)
# Assemble matrix of *violations*
Vmatrix <- Cmatrix
Vmatrix[, 1:(2 * nv + 36)] <- pmax(Vmatrix[, 1:(2 * nv + 36)], 0)        # inequality constraints
# Return necessary variables
return(list(Cmatrix = Cmatrix,
Vmatrix = Vmatrix,
v       = rowSums(Vmatrix)))
}
constraint<- list(name = "penalty",
beta = 100)
## 10 - Execution
results <- moead(problem  = problem.1,
decomp = decomp,
neighbors = neighbors,
aggfun = aggfun,
scaling = scaling,
constraint = constraint,
stopcrit = stopcrit,
update = update,
variation = variation,
showpars = showpars,
seed     = 15)
X = 0
EvaluateCommonParts(X)
EvaluateWeight(X)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
discrete
discrete[1]
discrete[1,]
discrete[2,]
discrete[1,]
unlist(discrete[1,])
which.min(abs(unlist(discrete[1,]) - 4))
discrete[1:2,]
which.min(abs(unlist(discrete[1:2,]) - 4))
which.min(abs(unlist(discrete[1:5,]) - 4))
which.min(abs(unlist(discrete[1,]) - 1.25))
unlist(discrete[1,])
discrete[1,which.min(abs(unlist(discrete[1,]) - 1.25))]
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Discrete.R', echo=TRUE)
unlist(discrete[2,])
unlist(discrete[1:2,])
as.matrix(discrete[1:2,])
as.matrix(discrete[1,])
discrete[1,which.min(abs(as.matrix(discrete[1,]) - 1.25))]
discrete[1,which.min(abs(as.matrix(discrete[1:2,]) - 1.25))]
as.matrix(discrete[1:2,])
as.matrix(discrete[1:2,]) - 1.25
min(as.matrix(discrete[1:2,]) - 1.25)
min(abs(as.matrix(discrete[1,]) - 1.25))
(abs(as.matrix(discrete[1,]) - 1.25))
min(abs(as.matrix(discrete[1,]) - 1.25))
apply(abs(as.matrix(discrete[1,]) - 1.25), 1, FUN=min)
apply(abs(as.matrix(discrete[1:5,]) - 1.25), 1, FUN=min)
apply(abs(as.matrix(discrete[1:5,]) - 1.25), 1, FUN=which.min)
apply(abs(as.matrix(discrete[1,]) - 1.25), 1, FUN=min)
as.matrix(discrete[1,])
apply(abs(as.matrix(discrete[1,]) - 1.2), 1, FUN=min)
objectives
objectives <- scan('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Evaluate/pop_objs_eval.txt')
objectives <- matrix(objectives, ncol = 4, byrow = TRUE)
objectives
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
X
xix =X
xix
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
X
nrow(X)
ncol(X)
len(X)
length(X)
Teste = c(randu)
Teste
teste <- runif(n = 148, min = 0.3, max = 2.5)
teste
discrete[1,which.min(abs(as.matrix(discrete[1,]) - teste))]
length()
length(discrete)
length(as.matrix(discrete))
18*148
min(na,)
min(abs(as.matrix(discrete[1,]) - 1.25))
min(abs(as.matrix(discrete[1,]) - 1.25), na.rm = FALSE)
min(abs(as.matrix(discrete[1,]) - 1.25), na.rm = TRUE)
min(abs(as.matrix(discrete[1:2,]) - 1.25), na.rm = TRUE)
apply(abs(as.matrix(discrete[1,]) - 1.2), 1,na.rm = TRUE FUN=min)
apply(abs(as.matrix(discrete[1,]) - 1.2), 1,na.rm = TRUE, FUN=min)
apply(abs(as.matrix(discrete[1:2,]) - 1.2), 1,na.rm = TRUE, FUN=min)
apply(abs(as.matrix(discrete) - 1.2), 1,na.rm = TRUE, FUN=min)
as.matrix(discrete)
as.matrix(discrete) - teste
teste
as.matrix(discrete) - teste
abs(as.matrix(discrete) - teste)
apply(abs(as.matrix(discrete) - teste)), 1,na.rm = TRUE, FUN=min)
apply(abs(as.matrix(discrete) - teste)), 1,na.rm = TRUE, FUN=min)
abs(as.matrix(discrete) - teste)
apply(abs(as.matrix(discrete) - teste)), 1,na.rm = TRUE, FUN=min)
apply(abs(as.matrix(discrete) - teste), 1,na.rm = TRUE, FUN=min)
apply(abs(as.matrix(discrete[1,]) - 1.2), 1, FUN=min)
apply(abs(as.matrix(discrete) - teste), 1,na.rm = TRUE, FUN=min)
apply(abs(as.matrix(discrete) - teste), 1,na.rm = TRUE, FUN=min) + teste
apply(abs(as.matrix(discrete) - X), 1,na.rm = TRUE, FUN=which.min)
apply(abs(as.matrix(discrete) - teste), 1,na.rm = TRUE, FUN=which.min)
apply(abs(as.matrix(discrete) - teste), 1, FUN=which.min)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Discrete.R', echo=TRUE)
nearest = apply(abs(as.matrix(discrete) - teste), 1, FUN=which.min)
nearest
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Discrete.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Discrete.R', echo=TRUE)
discrete[i]
for (i in nearest) {
discrete[i]
}
for (i in nearest) {
discrete[i]
}
nearest = apply(abs(as.matrix(discrete) - teste), 1, FUN=which.min)
for (i in nearest) {
discrete[i]
}
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Discrete.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Discrete.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Discrete.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Discrete.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Discrete.R', echo=TRUE)
discreteValues
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
X
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
force(X)
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
discrete
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
force(X)
X
teste <- matrix(runif(n = 148*50, min = 0.3, max = 2.5), nrow = 148)
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
force(X)
teste <- matrix(runif(n = 148*50, min = 0.3, max = 2.5), ncol = 148)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Discrete.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Discrete.R', echo=TRUE)
discretize(teste)
teste[1,]
discretize(teste[1,])
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Discrete.R', echo=TRUE)
discretize(teste[1,])
discretize(teste[1,])
a = discretize(teste[1,])
a
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/Discrete.R', echo=TRUE)
a = discretize(teste[1,])
a
a = apply(teste, FUN = discretize,1)
a
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
a = apply(teste, FUN = discretize,1)]
results$X
results$Y
BORA = apply(results$X,1, FUN = Discretize)
BORA
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
BORA = apply(results$X,1, FUN = Discretize)
BORA
BORA = apply(results$Y,1, FUN = Discretize)
results$Y
results$Y[1,]
results$Y[,1]
results$Y[,2]
plot(results$Y[,1], results$Y[,2])
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
plot(results$Y[,1], results$Y[,2])
preset_moead()
source('~/Documents/Unb/6S/EstudosEm/Projects/Cone/MinimizeCone.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/Cone/MinimizeCone.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/Cone/MinimizeCone.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/Cone/MinimizeCone.R', echo=TRUE)
preset_moead()
source('~/Documents/Unb/6S/EstudosEm/Projects/Cone/MinimizeCone.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
source('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar.R', echo=TRUE)
library(MOEADr)
preset_moead()
shell(a)
preset_moead()system(paste("source", paste(getwd(), "jpnsecCompetition2019/bin/activate", sep = "/"), sep = " "))
system(paste("source", paste(getwd(), "jpnsecCompetition2019/bin/activate", sep = "/"), sep = " "))
system(paste("source", paste(getwd(), "jpnsecCompetition2019/bin/activate", sep = "/"), sep = " "), intern = TRUE)
system(paste("source", paste(getwd(), "jpnsecCompetition2019/bin/activate", sep = "/"), sep = " "), intern = FALSE)
help("system")
help("shell")
help("shell")
help("system")
help("shell")
help("system")
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22/CR22.R', echo=TRUE)
setwd("~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22")
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22/CR22.R', echo=TRUE)
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22/CR22.R', echo=TRUE)
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22/CR22.R', echo=TRUE)
debugSource('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22/CR22.R', echo=TRUE)
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22/CR22.R', echo=TRUE)
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22/CR22.R', echo=TRUE)
normalized
results$Y
dominated_hypervolume(t(normalized[which(results$V$v == 0),]), (c(1.1,1.1)))
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22/CR22.R', echo=TRUE)
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22/CR22.R', echo=TRUE)
normalized[which(results$V$v == 0),1],normalized[which(results$V$v == 0),2]
normalized[which(results$V$v == 0),1]
results$V$v
results$V
results$Y
g1 <- function(X){
write(X,file = paste(getwd(), "/pop_vars_eval.txt", sep="/"), ncolumns = 4, sep = " ")
system("./example", ignore.stdout = TRUE)
constraints <- scan(paste(getwd(), "pop_vars_cons.txt", sep = "/"), quiet = TRUE)
constraints <- matrix(constraints, ncol = 4, byrow = TRUE)
return(constraints)
}
g1(results$X)
results$V
debugSource('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22/CR22.R', echo=TRUE)
Vmatrix
Vmatrix
v
sum(Vmatrix)
sum(Vmatrix)
sum(Vmatrix)
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21/CR21.R', echo=TRUE)
setwd("~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21")
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21/CR21.R', echo=TRUE)
normalize_points()
normalized
setwd("~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22")
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22/CR22.R', echo=TRUE)
debugSource('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22/CR22.R', echo=TRUE)
Vmatrix
Vmatrix
Vmatrix
Vmatrix
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22/CR22.R', echo=TRUE)
results$V
g1(results$X)
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22/CR22.R', echo=TRUE)
results$V
g1(X)
g1(results$X)
debugSource('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22/CR22.R', echo=TRUE)
X
Vmatrix
results$V$Vmatrix
debugSource('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22/CR22.R', echo=TRUE)
V
V$Vmatrix
V$Vmatrix
V
V
V
V
V
YV
V
V
V
XY
YV
V
V
con
Vmatrix
V
nfe
R
YV
V
XY
setwd("~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21")
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21/CR21.R', echo=TRUE)
results$V
g1 <- function(X){
write(X,file = paste(getwd(), "/pop_vars_eval.txt", sep="/"), ncolumns = 3, sep = " ")
system("./example", ignore.stdout = TRUE)
constraints <- scan(paste(getwd(), "pop_vars_cons.txt", sep = "/"), quiet = TRUE)
constraints <- matrix(constraints, ncol = 3, byrow = TRUE)
return(constraints)
}
results$X
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21/CR21.R', echo=TRUE)
debugSource('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21/CR21.R', echo=TRUE)
V
Vt
debugSource('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21/CR21.R', echo=TRUE)
debugSource('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21/CR21.R', echo=TRUE)
XY$V
V
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21/CR21.R', echo=TRUE)
results$V
debugSource('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21/CR21.R', echo=TRUE)
V
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21/CR21.R', echo=TRUE)
results$V
debugSource('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22/CR22.R', echo=TRUE)
setwd("~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22")
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22/CR22.R', echo=TRUE)
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22/CR22.R', echo=TRUE)
results$V
results$X
g1 <- function(X){
write(X,file = paste(getwd(), "/pop_vars_eval.txt", sep="/"), ncolumns = 4, sep = " ")
system("./example", ignore.stdout = TRUE)
constraints <- scan(paste(getwd(), "pop_vars_cons.txt", sep = "/"), quiet = TRUE)
constraints <- matrix(constraints, ncol = 4, byrow = TRUE)
return(constraints)
}
g1(results$X)
results$X$Vmatrix
results$V$Vmatrix
results$V$Cmatrix
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22/CR22.R', echo=TRUE)
results$V
results$X
results$Y
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22/CR22.R', echo=TRUE)
debugSource('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22/CR22.R', echo=TRUE)
X
X
YV
XY
YV
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22/CR22.R', echo=TRUE)
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE22/CR22.R', echo=TRUE)
results$X
setwd("~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21")
debugSource('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21/CR21.R', echo=TRUE)
View(X)
View(X)
View(X)
View(X)
View(X)
View(X)
V
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21/CR21.R', echo=TRUE)
results$X
results$V$v
View(results)
results$V$Vmatrix
X
g1 <- function(X){
write(X,file = paste(getwd(), "/pop_vars_eval.txt", sep="/"), ncolumns = 3, sep = " ")
system("./example", ignore.stdout = TRUE)
constraints <- scan(paste(getwd(), "pop_vars_cons.txt", sep = "/"), quiet = TRUE)
constraints <- matrix(constraints, ncol = 3, byrow = TRUE)
return(constraints)
}
g1(results$X)
results$X
g1(results$X[1,])
results$X[1,]
g1(c(49.006102,95.506647,1.843962))
g1(results$X[2,])
g1(results$X[3,])
g1(results$X[4,])
g1(results$X[5,])
g1(results$X[6,])
g1(results$X[30,])
g1(results$X[29,])
g1(results$X[28,])
length(results$X)
dim(results$X)
debugSource('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21/CR21.R', echo=TRUE)
dim(X)
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21/CR21.R', echo=TRUE)
g1(results$X)
results$X
apply(results$X)
apply(results$X, FUN = g1)
apply(results$X, FUN = g1(results$X))
apply(results$X, FUN = g1(results$X[1,]))
g1(results$X[1,])
g1(results$X[2,])
g1(results$X[3,])
g1(results$X[4,])
g1(results$X[5,])
g1(results$X[6,])
g1(results$X[7,])
g1(results$X[8,])
g1(results$X)
results$X
write(results$X,file = paste(getwd(), "/pop_vars_eval.txt", sep="/"), ncolumns = 3, sep = " ")
results$X
write(t(results$X),file = paste(getwd(), "/pop_vars_eval.txt", sep="/"), ncolumns = 3, sep = " ")
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21/CR21.R', echo=TRUE)
results$X
results$V
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21/CR21.R', echo=TRUE)
setwd("~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar")
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar3.R', echo=TRUE)
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar3.R', echo=TRUE)
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar3.R', echo=TRUE)
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar3.R', echo=TRUE)
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar3.R', echo=TRUE)
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar3.R', echo=TRUE)
X
debugSource('~/Documents/Unb/6S/EstudosEm/Projects/MazdaCar/MazdaCar3.R', echo=TRUE)
X
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21/CR21.R', echo=TRUE)
setwd("~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21")
source('~/Documents/Unb/Grupo de Estudos/Projects/REPROBLEMS/CRE21/CR21.R', echo=TRUE)
