#Extracting the max and min feasible values
maxob1 = max(A[which(A[,3]==1),1])
minob1 = min(A[which(A[,3]==1),1])
maxob2 = max(A[which(A[,3]==1),2])
minob2 = min(A[which(A[,3]==1),2])
#Converting the matrix to have n_iteration as a dimension
B = array(0, c(n_individuals,n_objectives+1,n_iterations))
for(i in 1:n_iterations){
B[,,i] = A[((i-1)*n_individuals+1):(n_individuals*i),]
}
#Normalizing the values using all the iterations
Newnormalized = B
Newnormalized[,1,] = (B[,1,] - minob1)/(maxob1 - minob1)
Newnormalized[,2,] = (B[,2,] - minob2)/(maxob2 - minob2)
NewHyper = matrix(0,ncol = n_iterations, nrow = 1)
for(j in 1:n_iterations){
#No feasible solutions in the population
if(sum(Newnormalized[,3,j]) == 0){
NewHyper[j] = 0
}
#Only one feasible solution
else if(sum(Newnormalized[,3,j]) == 1){
NewHyper[j] = dominated_hypervolume(matrix(Newnormalized[which(Newnormalized[,3,j] == 1),1:2,j]), (c(1.1,1.1)))
}
#Multiple feasible solutions
else{
NewHyper[j] = dominated_hypervolume(t(Newnormalized[which(Newnormalized[,3,j] == 1),1:2,j]), (c(1.1,1.1)))
}
}
return(NewHyper)
CRE2_hypervolume_file <- function(filename, n_individuals, n_objectives, n_iterations...){
#Extracting the objective values from the files
YAll = scan(paste(getwd(), sprintf(filename), sep = "/"), quiet = TRUE)
A = matrix(YAll,nrow = n_individuals*n_iterations, ncol = n_objectives+1, byrow = TRUE)
#Extracting the max and min feasible values
maxob1 = max(A[which(A[,3]==1),1])
minob1 = min(A[which(A[,3]==1),1])
maxob2 = max(A[which(A[,3]==1),2])
minob2 = min(A[which(A[,3]==1),2])
#Converting the matrix to have n_iteration as a dimension
B = array(0, c(n_individuals,n_objectives+1,n_iterations))
for(i in 1:n_iterations){
B[,,i] = A[((i-1)*n_individuals+1):(n_individuals*i),]
}
#Normalizing the values using all the iterations
Newnormalized = B
Newnormalized[,1,] = (B[,1,] - minob1)/(maxob1 - minob1)
Newnormalized[,2,] = (B[,2,] - minob2)/(maxob2 - minob2)
NewHyper = matrix(0,ncol = n_iterations, nrow = 1)
for(j in 1:n_iterations){
#No feasible solutions in the population
if(sum(Newnormalized[,3,j]) == 0){
NewHyper[j] = 0
}
#Only one feasible solution
else if(sum(Newnormalized[,3,j]) == 1){
NewHyper[j] = dominated_hypervolume(matrix(Newnormalized[which(Newnormalized[,3,j] == 1),1:2,j]), (c(1.1,1.1)))
}
#Multiple feasible solutions
else{
NewHyper[j] = dominated_hypervolume(t(Newnormalized[which(Newnormalized[,3,j] == 1),1:2,j]), (c(1.1,1.1)))
}
}
return(NewHyper)
}
minis = c(1:100)
for(i in 1:100){
if(sum(B[,3,i]) == 0){
minis[i] = 0.05
}
else{
minis[i] = max(B[which(B[,3,i] == 1),1,i])
}
}
plot(minis)
for(i in 1:100){
if(sum(B[,3,i]) == 0){
minis[i] = 0.05
}
else{
minis[i] = min(B[which(B[,3,i] == 1),1,i])
}
}
plot(minis)
for(i in 1:100){
if(sum(B[,3,i]) == 0){
minis[i] = 0.05
}
else{
minis[i] = min(B[which(B[,3,i] == 1),2,i])
}
}
plot(minis)
results$Y
plot(results$Y)
plot(results$Y[1:98])
plot(results$Y[2:98])
plot(results$Y[,2:98])
plot(results$Y[2:98,])
plot(t(results$Y[2:98,]))
plot((results$Y[2:98,])
plot((results$Y[2:98,])
plot((results$Y[2:98,]))
plot((results$Y[2:98,2],results$Y[2:98,1]))
plot(results$Y[2:98,2],results$Y[2:98,1])
plot((results$Y[2:98,2],results$Y[2:98,1]))
plot((results$Y[2:98,2],results$Y[2:98,1]))
plot((results$Y[2:98,])
)
plot((results$Y[1:100,])
)
plot(results$Y)
results$Y
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
results$Y
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
results$Y
plot(results$Y)
plot(results$Y[2:98])
plot(results$Y)
debugSource('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/MyFunctions/updt_standard_save2.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/MyFunctions/updt_standard_save2.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
#Extracting the objective values from the files
YAll = scan(paste(getwd(), sprintf(filename), sep = "/"), quiet = TRUE)
A = matrix(YAll,nrow = n_individuals*n_iterations, ncol = n_objectives+1, byrow = TRUE)
#Extracting the max and min feasible values
maxob1 = max(A[which(A[,3]==1),1])
minob1 = min(A[which(A[,3]==1),1])
maxob2 = max(A[which(A[,3]==1),2])
minob2 = min(A[which(A[,3]==1),2])
#Converting the matrix to have n_iteration as a dimension
B = array(0, c(n_individuals,n_objectives+1,n_iterations))
for(i in 1:n_iterations){
B[,,i] = A[((i-1)*n_individuals+1):(n_individuals*i),]
}
#Normalizing the values using all the iterations
Newnormalized = B
Newnormalized[,1,] = (B[,1,] - minob1)/(maxob1 - minob1)
Newnormalized[,2,] = (B[,2,] - minob2)/(maxob2 - minob2)
NewHyper = matrix(0,ncol = n_iterations, nrow = 1)
for(j in 1:n_iterations){
#No feasible solutions in the population
if(sum(Newnormalized[,3,j]) == 0){
NewHyper[j] = 0
}
#Only one feasible solution
else if(sum(Newnormalized[,3,j]) == 1){
NewHyper[j] = dominated_hypervolume(matrix(Newnormalized[which(Newnormalized[,3,j] == 1),1:2,j]), (c(1.1,1.1)))
}
#Multiple feasible solutions
else{
NewHyper[j] = dominated_hypervolume(t(Newnormalized[which(Newnormalized[,3,j] == 1),1:2,j]), (c(1.1,1.1)))
}
}
return(NewHyper)
CRE2_hypervolume_file <- function(filename, n_individuals, n_objectives, n_iterations...){
#Extracting the objective values from the files
YAll = scan(paste(getwd(), sprintf(filename), sep = "/"), quiet = TRUE)
A = matrix(YAll,nrow = n_individuals*n_iterations, ncol = n_objectives+1, byrow = TRUE)
#Extracting the max and min feasible values
maxob1 = max(A[which(A[,3]==1),1])
minob1 = min(A[which(A[,3]==1),1])
maxob2 = max(A[which(A[,3]==1),2])
minob2 = min(A[which(A[,3]==1),2])
#Converting the matrix to have n_iteration as a dimension
B = array(0, c(n_individuals,n_objectives+1,n_iterations))
for(i in 1:n_iterations){
B[,,i] = A[((i-1)*n_individuals+1):(n_individuals*i),]
}
#Normalizing the values using all the iterations
Newnormalized = B
Newnormalized[,1,] = (B[,1,] - minob1)/(maxob1 - minob1)
Newnormalized[,2,] = (B[,2,] - minob2)/(maxob2 - minob2)
NewHyper = matrix(0,ncol = n_iterations, nrow = 1)
for(j in 1:n_iterations){
#No feasible solutions in the population
if(sum(Newnormalized[,3,j]) == 0){
NewHyper[j] = 0
}
#Only one feasible solution
else if(sum(Newnormalized[,3,j]) == 1){
NewHyper[j] = dominated_hypervolume(matrix(Newnormalized[which(Newnormalized[,3,j] == 1),1:2,j]), (c(1.1,1.1)))
}
#Multiple feasible solutions
else{
NewHyper[j] = dominated_hypervolume(t(Newnormalized[which(Newnormalized[,3,j] == 1),1:2,j]), (c(1.1,1.1)))
}
}
return(NewHyper)
}
minis = c(1:100)
for(i in 1:100){
if(sum(B[,3,i]) == 0){
minis[i] = 0.05
}
else{
minis[i] = min(B[which(B[,3,i] == 1),2,i])
}
}
plot(minis)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/MyFunctions/CRE2_hypervolume_file.R', echo=TRUE)
for(i in 1:100){
if(sum(B[,3,i]) == 0){
minis[i] = 0.05
}
else{
minis[i] = min(B[which(B[,3,i] == 1),1,i])
}
}
plot(minis)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
setwd("~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE22")
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE22/CR22.R', echo=TRUE)
#Extracting the objective values from the files
YAll = scan(paste(getwd(), sprintf(filename), sep = "/"), quiet = TRUE)
A = matrix(YAll,nrow = n_individuals*n_iterations, ncol = n_objectives+1, byrow = TRUE)
#Extracting the max and min feasible values
maxob1 = max(A[which(A[,3]==1),1])
minob1 = min(A[which(A[,3]==1),1])
maxob2 = max(A[which(A[,3]==1),2])
minob2 = min(A[which(A[,3]==1),2])
#Converting the matrix to have n_iteration as a dimension
B = array(0, c(n_individuals,n_objectives+1,n_iterations))
for(i in 1:n_iterations){
B[,,i] = A[((i-1)*n_individuals+1):(n_individuals*i),]
}
#Normalizing the values using all the iterations
Newnormalized = B
Newnormalized[,1,] = (B[,1,] - minob1)/(maxob1 - minob1)
Newnormalized[,2,] = (B[,2,] - minob2)/(maxob2 - minob2)
NewHyper = matrix(0,ncol = n_iterations, nrow = 1)
for(j in 1:n_iterations){
#No feasible solutions in the population
if(sum(Newnormalized[,3,j]) == 0){
NewHyper[j] = 0
}
#Only one feasible solution
else if(sum(Newnormalized[,3,j]) == 1){
NewHyper[j] = dominated_hypervolume(matrix(Newnormalized[which(Newnormalized[,3,j] == 1),1:2,j]), (c(1.1,1.1)))
}
#Multiple feasible solutions
else{
NewHyper[j] = dominated_hypervolume(t(Newnormalized[which(Newnormalized[,3,j] == 1),1:2,j]), (c(1.1,1.1)))
}
}
return(NewHyper)
CRE2_hypervolume_file <- function(filename, n_individuals, n_objectives, n_iterations...){
#Extracting the objective values from the files
YAll = scan(paste(getwd(), sprintf(filename), sep = "/"), quiet = TRUE)
A = matrix(YAll,nrow = n_individuals*n_iterations, ncol = n_objectives+1, byrow = TRUE)
#Extracting the max and min feasible values
maxob1 = max(A[which(A[,3]==1),1])
minob1 = min(A[which(A[,3]==1),1])
maxob2 = max(A[which(A[,3]==1),2])
minob2 = min(A[which(A[,3]==1),2])
#Converting the matrix to have n_iteration as a dimension
B = array(0, c(n_individuals,n_objectives+1,n_iterations))
for(i in 1:n_iterations){
B[,,i] = A[((i-1)*n_individuals+1):(n_individuals*i),]
}
#Normalizing the values using all the iterations
Newnormalized = B
Newnormalized[,1,] = (B[,1,] - minob1)/(maxob1 - minob1)
Newnormalized[,2,] = (B[,2,] - minob2)/(maxob2 - minob2)
NewHyper = matrix(0,ncol = n_iterations, nrow = 1)
for(j in 1:n_iterations){
#No feasible solutions in the population
if(sum(Newnormalized[,3,j]) == 0){
NewHyper[j] = 0
}
#Only one feasible solution
else if(sum(Newnormalized[,3,j]) == 1){
NewHyper[j] = dominated_hypervolume(matrix(Newnormalized[which(Newnormalized[,3,j] == 1),1:2,j]), (c(1.1,1.1)))
}
#Multiple feasible solutions
else{
NewHyper[j] = dominated_hypervolume(t(Newnormalized[which(Newnormalized[,3,j] == 1),1:2,j]), (c(1.1,1.1)))
}
}
return(NewHyper)
}
minis = c(1:100)
for(i in 1:100){
if(sum(B[,3,i]) == 0){
minis[i] = 0.05
}
else{
minis[i] = min(B[which(B[,3,i] == 1),1,i])
}
}
plot(minis)
plot(NewHyper)
plot(c(1:100),NewHyper)
minis = c(1:100)
for(i in 1:100){
if(sum(B[,3,i]) == 0){
minis[i] = 0.05
}
else{
minis[i] = mean(B[which(B[,3,i] == 1),1,i])
}
}
plot(minis)
for(i in 1:100){
if(sum(B[,3,i]) == 0){
minis[i] = 0.05
}
else{
minis[i] = mean(B[which(B[,3,i] == 1),2,i])
}
}
plot(minis)
for(i in 1:100){
if(sum(B[,3,i]) == 0){
minis[i] = 0.05
}
else{
minis[i] = min(B[which(B[,3,i] == 1),2,i])
}
}
plot(minis)
plot(results$Y)
plot(results$Y[,2:299])
plot(results$Y[2:98,])
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE22/CR22.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE22/CR22.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE22/CR22.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE22/CR22.R', echo=TRUE)
setwd("~/")
setwd("~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21")
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE21/CR21.R', echo=TRUE)
plot(results$Y)
plot(results$Y[,2:98])
plot(results$Y[2:98,])
results$Y[2:98,]
results$Y[,]
plot(results$Y[1:29,])
plot(results$Y[2:29,])
setwd("~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE22")
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE22/CR22.R', echo=TRUE)
plot(results$Y)
plot(results$Y[1:29])
plot(results$Y[1:29,])
plot(results$Y[,1:29])
results$Y[,1:29]
results$Y
plot(results$Y[,1:14])
plot(results$Y[1:14,])
plot(results$Y[2:14,])
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE22/CR22.R', echo=TRUE)
plot(results$Y[2:14,])
plot(results$Y[2:99,])
plot(results$Y[2:70,])
plot(results$Y[2:50,])
plot(results$Y[3:50,])
plot(results$Y[3:40,])
plot(results$Y[4:30,])
plot(results$Y[4:30,], xlim = 1, ylim = 2)
plot(results$Y[4:30,], xlim = 1)
plot(results$Y[4:30,], xlim = 1, ylim = 8)
plot(results$Y[4:5,], xlim = 1, ylim = 8)
plot(results$Y[4:5,], xlim = 1, ylim = 8)
rsults$Y
results$Y
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE22/CR22.R', echo=TRUE)
results$Y
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE22/CR22.R', echo=TRUE)
results$Y
plot(results$Y)
plot(results$Y[2:98,])
plot(results$Y[2:60,])
plot(results$Y[e:60,])
plot(results$Y[3:60,])
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE22/CR22.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE22/CR22.R', echo=TRUE)
plot(results$Y[3:60,])
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE22/CR22.R', echo=TRUE)
plot(results$Y[2:98,])
plot(results$Y[5:98,])
plot(results$Y[5:90,])
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE22/CR22.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE22/CR22.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE22/CR22.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE22/CR22.R', echo=TRUE)
source('~/Documents/Unb/GrupodeEstudos/MultiObjectiveProjects/REProblems/CRE22/CR22.R', echo=TRUE)
#Extracting the objective values from the files
YAll = scan(paste(getwd(), sprintf(filename), sep = "/"), quiet = TRUE)
A = matrix(YAll,nrow = n_individuals*n_iterations, ncol = n_objectives+1, byrow = TRUE)
#Extracting the max and min feasible values
maxob1 = max(A[which(A[,3]==1),1])
minob1 = min(A[which(A[,3]==1),1])
maxob2 = max(A[which(A[,3]==1),2])
minob2 = min(A[which(A[,3]==1),2])
#Converting the matrix to have n_iteration as a dimension
B = array(0, c(n_individuals,n_objectives+1,n_iterations))
for(i in 1:n_iterations){
B[,,i] = A[((i-1)*n_individuals+1):(n_individuals*i),]
}
#Normalizing the values using all the iterations
Newnormalized = B
Newnormalized[,1,] = (B[,1,] - minob1)/(maxob1 - minob1)
Newnormalized[,2,] = (B[,2,] - minob2)/(maxob2 - minob2)
NewHyper = matrix(0,ncol = n_iterations, nrow = 1)
for(j in 1:n_iterations){
#No feasible solutions in the population
if(sum(Newnormalized[,3,j]) == 0){
NewHyper[j] = 0
}
#Only one feasible solution
else if(sum(Newnormalized[,3,j]) == 1){
NewHyper[j] = dominated_hypervolume(matrix(Newnormalized[which(Newnormalized[,3,j] == 1),1:2,j]), (c(1.1,1.1)))
}
#Multiple feasible solutions
else{
NewHyper[j] = dominated_hypervolume(t(Newnormalized[which(Newnormalized[,3,j] == 1),1:2,j]), (c(1.1,1.1)))
}
}
return(NewHyper)
CRE2_hypervolume_file <- function(filename, n_individuals, n_objectives, n_iterations...){
#Extracting the objective values from the files
YAll = scan(paste(getwd(), sprintf(filename), sep = "/"), quiet = TRUE)
A = matrix(YAll,nrow = n_individuals*n_iterations, ncol = n_objectives+1, byrow = TRUE)
#Extracting the max and min feasible values
maxob1 = max(A[which(A[,3]==1),1])
minob1 = min(A[which(A[,3]==1),1])
maxob2 = max(A[which(A[,3]==1),2])
minob2 = min(A[which(A[,3]==1),2])
#Converting the matrix to have n_iteration as a dimension
B = array(0, c(n_individuals,n_objectives+1,n_iterations))
for(i in 1:n_iterations){
B[,,i] = A[((i-1)*n_individuals+1):(n_individuals*i),]
}
#Normalizing the values using all the iterations
Newnormalized = B
Newnormalized[,1,] = (B[,1,] - minob1)/(maxob1 - minob1)
Newnormalized[,2,] = (B[,2,] - minob2)/(maxob2 - minob2)
NewHyper = matrix(0,ncol = n_iterations, nrow = 1)
for(j in 1:n_iterations){
#No feasible solutions in the population
if(sum(Newnormalized[,3,j]) == 0){
NewHyper[j] = 0
}
#Only one feasible solution
else if(sum(Newnormalized[,3,j]) == 1){
NewHyper[j] = dominated_hypervolume(matrix(Newnormalized[which(Newnormalized[,3,j] == 1),1:2,j]), (c(1.1,1.1)))
}
#Multiple feasible solutions
else{
NewHyper[j] = dominated_hypervolume(t(Newnormalized[which(Newnormalized[,3,j] == 1),1:2,j]), (c(1.1,1.1)))
}
}
return(NewHyper)
}
minis = c(1:100)
for(i in 1:100){
if(sum(B[,3,i]) == 0){
minis[i] = 0.05
}
else{
minis[i] = min(B[which(B[,3,i] == 1),2,i])
}
}
plot(minis)
for(i in 1:100){
if(sum(B[,3,i]) == 0){
minis[i] = 0.05
}
else{
minis[i] = min(B[which(B[,3,i] == 1),1,i])
}
}
plot(minis)
